{
  "contractName": "BdlNftStaking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BdlNftStaking.sol\":\"BdlNftStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/BdlNft.sol\":{\"keccak256\":\"0xe39fadf2e77b17dc16679e576ca346f8d53d131a63e64e3484c30565d15b784c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c1f9885d4ba3a1a4f0595d0bbec3d76d8d3bb84693329e56abb33c92b7001dcd\",\"dweb:/ipfs/Qmehp8osmyeNF3AZinb2Qemo7Lc3pWZq7s6rwE3RVrxkhs\"]},\"project:/contracts/BdlNftStaking.sol\":{\"keccak256\":\"0xa5c6507b37763a661d2bb91d5d7559c2599afd7025a1f94a506679491e2bf565\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5db5d3e478a25a5492bb71a5bdcd42a56c52d30f79a0bba614874c4b2f53dd23\",\"dweb:/ipfs/QmXvPF6kpe4AnRUjxBfZ9tMre7yiUfB9Ys8aMgiQFcs9dh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160005561001f33610031565b6001805460ff60a01b19169055610083565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61046c806100926000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146101075780638da5cb5b14610111578063f2fde38b1461013957600080fd5b8063150b7a021461006c5780635c975abb146100d9575b600080fd5b6100a361007a366004610338565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b60015474010000000000000000000000000000000000000000900460ff1660405190151581526020016100d0565b61010f61014c565b005b60015460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d0565b61010f610147366004610414565b610160565b610154610202565b61015e6000610269565b565b610168610202565b73ffffffffffffffffffffffffffffffffffffffff81166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101ff81610269565b50565b60015473ffffffffffffffffffffffffffffffffffffffff16331461015e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ed565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461030457600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561034e57600080fd5b610357856102e0565b9350610365602086016102e0565b925060408501359150606085013567ffffffffffffffff8082111561038957600080fd5b818701915087601f83011261039d57600080fd5b8135818111156103af576103af610309565b604051601f8201601f19908116603f011681019083821181831017156103d7576103d7610309565b816040528281528a60208487010111156103f057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561042657600080fd5b61042f826102e0565b939250505056fea264697066735822122040c769214a4a178a91c69b49368303fcab08f340203fca84dc129012f7ca7ab064736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146101075780638da5cb5b14610111578063f2fde38b1461013957600080fd5b8063150b7a021461006c5780635c975abb146100d9575b600080fd5b6100a361007a366004610338565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b60015474010000000000000000000000000000000000000000900460ff1660405190151581526020016100d0565b61010f61014c565b005b60015460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d0565b61010f610147366004610414565b610160565b610154610202565b61015e6000610269565b565b610168610202565b73ffffffffffffffffffffffffffffffffffffffff81166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101ff81610269565b50565b60015473ffffffffffffffffffffffffffffffffffffffff16331461015e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ed565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461030457600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561034e57600080fd5b610357856102e0565b9350610365602086016102e0565b925060408501359150606085013567ffffffffffffffff8082111561038957600080fd5b818701915087601f83011261039d57600080fd5b8135818111156103af576103af610309565b604051601f8201601f19908116603f011681019083821181831017156103d7576103d7610309565b816040528281528a60208487010111156103f057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561042657600080fd5b61042f826102e0565b939250505056fea264697066735822122040c769214a4a178a91c69b49368303fcab08f340203fca84dc129012f7ca7ab064736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3179:53",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:53",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:53"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:53"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:53",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:53"
                  },
                  "nodeType": "YulIf",
                  "src": "111:93:53"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:53",
                "type": ""
              }
            ],
            "src": "14:196:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "247:152:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "264:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "267:77:53",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "257:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "257:88:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "257:88:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "361:1:53",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:4:53",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "354:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "354:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "354:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "385:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "388:4:53",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "378:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "378:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "378:15:53"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "215:184:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "534:1008:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "581:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "590:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "583:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "583:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "583:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "555:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "564:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "551:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "576:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "547:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "547:33:53"
                  },
                  "nodeType": "YulIf",
                  "src": "544:53:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "606:39:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "635:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "616:18:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:29:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "606:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "654:48:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "687:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "698:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "683:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "683:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "664:18:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:38:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "654:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "711:42:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "721:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:32:53"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "762:46:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "793:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "804:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "776:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:32:53"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "766:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "817:28:53",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "827:18:53",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "821:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "872:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "884:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "874:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "874:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "874:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "860:6:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "868:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "857:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:14:53"
                  },
                  "nodeType": "YulIf",
                  "src": "854:34:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "897:32:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "911:9:53"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "922:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:22:53"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "901:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "977:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "986:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "979:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "979:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "979:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "956:2:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "960:4:53",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "952:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "952:13:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "967:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "948:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:27:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "941:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:35:53"
                  },
                  "nodeType": "YulIf",
                  "src": "938:55:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1002:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1025:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1012:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:16:53"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1006:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1051:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1053:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1053:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1053:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1043:2:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1047:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1040:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1040:10:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1037:36:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1082:17:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1096:2:53",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1092:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:7:53"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1086:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1108:23:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1122:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1122:9:53"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1112:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1140:71:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1162:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1186:2:53"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1190:4:53",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1182:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1182:13:53"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1197:2:53"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1178:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1178:22:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1202:2:53",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1174:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1174:31:53"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1207:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1170:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1170:40:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1158:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1158:53:53"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1144:10:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1270:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1272:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1272:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1272:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1229:10:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1241:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1226:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1226:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1249:10:53"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1261:6:53"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1246:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:22:53"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1223:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:46:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1220:72:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1308:2:53",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1312:10:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1301:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:22:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1301:22:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1339:6:53"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1347:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1332:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:18:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1332:18:53"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1396:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1405:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1408:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1398:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1398:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1398:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1373:2:53"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1377:2:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1369:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1369:11:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:20:53"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1387:7:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1362:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1362:33:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1359:53:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1438:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1446:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1434:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1434:15:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1455:2:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1459:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1451:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1451:11:53"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1464:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1421:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1421:46:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1421:46:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1491:6:53"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1499:2:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1487:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1487:15:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1504:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1483:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1483:24:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1476:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:35:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1476:35:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1520:16:53",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1530:6:53"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1520:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "476:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "487:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "499:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "507:6:53",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "515:6:53",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "523:6:53",
                "type": ""
              }
            ],
            "src": "404:1138:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1646:149:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1656:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1668:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1664:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1664:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1656:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1698:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1721:66:53",
                            "type": "",
                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1709:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1709:79:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1691:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:98:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1691:98:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1615:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1626:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1637:4:53",
                "type": ""
              }
            ],
            "src": "1547:248:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1895:92:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1905:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1928:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1913:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1913:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1905:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1947:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1972:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1965:6:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1965:14:53"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1958:6:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1958:22:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1940:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:41:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1940:41:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1864:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1875:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1886:4:53",
                "type": ""
              }
            ],
            "src": "1800:187:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2093:125:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2103:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2115:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2126:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2111:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2103:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2145:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2160:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2168:42:53",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2156:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2156:55:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:74:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2138:74:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2062:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2073:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2084:4:53",
                "type": ""
              }
            ],
            "src": "1992:226:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2293:116:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2339:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2348:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2351:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2341:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2341:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2341:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2314:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2323:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2310:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2310:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2335:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2306:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2303:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2364:39:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2393:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2374:18:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2374:29:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2364:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2259:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2270:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2282:6:53",
                "type": ""
              }
            ],
            "src": "2223:186:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2588:228:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2605:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2616:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2598:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2598:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2598:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2639:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2650:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2635:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2635:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2655:2:53",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2628:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2628:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2628:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2678:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2689:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2674:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2674:18:53"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2694:34:53",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2667:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2667:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2749:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2745:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2745:18:53"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2765:8:53",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2738:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:36:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2738:36:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2783:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2795:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2806:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2791:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2791:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2783:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2565:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2579:4:53",
                "type": ""
              }
            ],
            "src": "2414:402:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2995:182:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3012:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3023:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3005:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3005:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3005:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3046:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3057:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3042:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3042:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3062:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3035:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3035:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3035:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3085:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3096:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3081:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3081:18:53"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3101:34:53",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3074:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3074:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3074:62:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3145:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3157:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3168:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3153:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3153:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3145:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2972:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2986:4:53",
                "type": ""
              }
            ],
            "src": "2821:356:53"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "363:7199:45:-:0;;;;;;;;;;;;-1:-1:-1;1701:1:3;1806:7;:22;936:32:0;719:10:16;936:18:0;:32::i;:::-;996:7:2;:15;;-1:-1:-1;;;;996:15:2;;;363:7199:45;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;363:7199:45:-;;;;;;;",
  "deployedSourceMap": "363:7199:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200:11;;;;;;:::i;:::-;751:30;588:200;;;;;;;;;;1721:66:53;1709:79;;;1691:98;;1679:2;1664:18;588:200:11;;;;;;;;1615:84:2;1685:7;;;;;;;1615:84;;1965:14:53;;1958:22;1940:41;;1928:2;1913:18;1615:84:2;1800:187:53;1831:101:0;;;:::i;:::-;;1201:85;1273:6;;1201:85;;1273:6;;;;2138:74:53;;2126:2;2111:18;1201:85:0;1992:226:53;2081:198:0;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;2616:2:53;2161:73:0::1;::::0;::::1;2598:21:53::0;2655:2;2635:18;;;2628:30;2694:34;2674:18;;;2667:62;2765:8;2745:18;;;2738:36;2791:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;1422:23;1273:6;719:10:16;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3023:2:53;1414:68:0;;;3005:21:53;;;3042:18;;;3035:30;3101:34;3081:18;;;3074:62;3153:18;;1414:68:0;2821:356:53;2433:187:0;2525:6;;;;2541:17;;;;;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:196:53:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:184::-;267:77;264:1;257:88;364:4;361:1;354:15;388:4;385:1;378:15;404:1138;499:6;507;515;523;576:3;564:9;555:7;551:23;547:33;544:53;;;593:1;590;583:12;544:53;616:29;635:9;616:29;:::i;:::-;606:39;;664:38;698:2;687:9;683:18;664:38;:::i;:::-;654:48;;749:2;738:9;734:18;721:32;711:42;;804:2;793:9;789:18;776:32;827:18;868:2;860:6;857:14;854:34;;;884:1;881;874:12;854:34;922:6;911:9;907:22;897:32;;967:7;960:4;956:2;952:13;948:27;938:55;;989:1;986;979:12;938:55;1025:2;1012:16;1047:2;1043;1040:10;1037:36;;;1053:18;;:::i;:::-;1128:2;1122:9;1096:2;1182:13;;-1:-1:-1;;1178:22:53;;;1202:2;1174:31;1170:40;1158:53;;;1226:18;;;1246:22;;;1223:46;1220:72;;;1272:18;;:::i;:::-;1312:10;1308:2;1301:22;1347:2;1339:6;1332:18;1387:7;1382:2;1377;1373;1369:11;1365:20;1362:33;1359:53;;;1408:1;1405;1398:12;1359:53;1464:2;1459;1455;1451:11;1446:2;1438:6;1434:15;1421:46;1509:1;1504:2;1499;1491:6;1487:15;1483:24;1476:35;1530:6;1520:16;;;;;;;404:1138;;;;;;;:::o;2223:186::-;2282:6;2335:2;2323:9;2314:7;2310:23;2306:32;2303:52;;;2351:1;2348;2341:12;2303:52;2374:29;2393:9;2374:29;:::i;:::-;2364:39;2223:186;-1:-1:-1;;;2223:186:53:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./BdlNft.sol\";\n// import \"./BdlToken.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract BdlNftStaking is ERC721Holder, ReentrancyGuard, Ownable, Pausable {\n    // // state variable\n    // BdlToken bdlToken;\n    // BdlNft bdlNft;\n\n    // uint256 public periodFinish = 0;\n    // uint256 public rewardRate = 0;\n    // uint256 public rewardsDuration;\n    // uint256 public lastUpdateTime;\n    // uint256 public rewardPerTokenStored;\n\n    // mapping(address => uint256) public userRewardPerTokenPaid;\n    // mapping(address => uint256) public rewards;\n\n    // uint256 public totalSupply;\n    // mapping(address => uint256) public balances;\n    // mapping(uint256 => address) public stakedAssets;\n\n    // // contructor\n    // constructor(\n    //     address _bdlNft,\n    //     address _bdlToken,\n    //     uint256 _rewardsDuration\n    // ) {\n    //     bdlNft = BdlNft(_bdlNft);\n    //     bdlToken = BdlToken(_bdlToken);\n    //     rewardsDuration = _rewardsDuration;\n    // }\n\n    // // views\n    // function lastTimeRewardApplicable() public view returns (uint256) {\n    //     return block.timestamp < periodFinish ? block.timestamp : periodFinish;\n    // }\n\n    // function rewardPerToken() public view returns (uint256) {\n    //     if (totalSupply == 0) {\n    //         return rewardPerTokenStored;\n    //     }\n    //     return\n    //         rewardPerTokenStored +\n    //         (((lastTimeRewardApplicable() - lastUpdateTime) *\n    //             rewardRate *\n    //             1e18) / totalSupply);\n    // }\n\n    // function earned(address account) public view returns (uint256) {\n    //     return\n    //         ((balances[account] *\n    //             (rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18) +\n    //         rewards[account];\n    // }\n\n    // function getRewardForDuration() external view returns (uint256) {\n    //     return rewardRate * rewardsDuration;\n    // }\n\n    // // mutative functions\n    // /// @notice Stakes user's NFTs\n    // /// @param tokenIds The tokenIds of the NFTs which will be staked\n    // function stake(uint256[] memory tokenIds)\n    //     external\n    //     nonReentrant\n    //     whenNotPaused\n    //     updateReward(msg.sender)\n    // {\n    //     require(tokenIds.length != 0, \"Staking: No tokenIds provided\");\n\n    //     uint256 amount;\n    //     for (uint256 i = 0; i < tokenIds.length; i += 1) {\n    //         // Transfer user's NFTs to the staking contract\n    //         bdlNft.transferFrom(msg.sender, address(this), tokenIds[i]);\n    //         // Increment the amount which will be staked\n    //         amount += 1;\n    //         // Save who is the staker/depositor of the token\n    //         stakedAssets[tokenIds[i]] = msg.sender;\n    //     }\n    //     _stake(amount);\n    //     emit Staked(msg.sender, amount, tokenIds);\n    // }\n\n    // /// @notice Withdraws staked user's NFTs\n    // /// @param tokenIds The tokenIds of the NFTs which will be withdrawn\n    // function withdraw(uint256[] memory tokenIds)\n    //     public\n    //     nonReentrant\n    //     updateReward(msg.sender)\n    // {\n    //     require(tokenIds.length != 0, \"Staking: No tokenIds provided\");\n\n    //     uint256 amount;\n    //     for (uint256 i = 0; i < tokenIds.length; i += 1) {\n    //         // Check if the user who withdraws is the owner\n    //         require(\n    //             stakedAssets[tokenIds[i]] == msg.sender,\n    //             \"Staking: Not the staker of the token\"\n    //         );\n    //         // Transfer NFTs back to the owner\n    //         bdlNft.transferFrom(address(this), msg.sender, tokenIds[i]);\n    //         // Increment the amount which will be withdrawn\n    //         amount += 1;\n    //         // Cleanup stakedAssets for the current tokenId\n    //         stakedAssets[tokenIds[i]] = address(0);\n    //     }\n    //     _withdraw(amount);\n\n    //     emit Withdrawn(msg.sender, amount, tokenIds);\n    // }\n\n    // function getReward() public nonReentrant updateReward(msg.sender) {\n    //     uint256 reward = rewards[msg.sender];\n    //     if (reward > 0) {\n    //         rewards[msg.sender] = 0;\n    //         bdlToken.transfer(msg.sender, reward);\n    //         emit RewardPaid(msg.sender, reward);\n    //     }\n    // }\n\n    // function exit(uint256[] memory tokenIds) external {\n    //     withdraw(tokenIds);\n    //     getReward();\n    // }\n\n    // function _stake(uint256 _amount) internal {\n    //     totalSupply += _amount;\n    //     balances[msg.sender] += _amount;\n    // }\n\n    // function _withdraw(uint256 _amount) internal {\n    //     totalSupply -= _amount;\n    //     balances[msg.sender] -= _amount;\n    // }\n\n    // // retricted functions\n    // /// @notice Calculates and sets the reward rate\n    // /// @param reward The amount of the reward which will be distributed during the entire period\n    // function notifyRewardAmount(uint256 reward)\n    //     external\n    //     onlyOwner\n    //     updateReward(address(0))\n    // {\n    //     if (block.timestamp >= periodFinish) {\n    //         rewardRate = reward / rewardsDuration;\n    //     } else {\n    //         uint256 remaining = periodFinish - block.timestamp;\n    //         uint256 leftover = remaining * rewardRate;\n    //         rewardRate = (reward + leftover) / rewardsDuration;\n    //     }\n\n    //     // Ensure the provided reward amount is not more than the balance in the contract.\n    //     // This keeps the reward rate in the right range, preventing overflows due to\n    //     // very high values of rewardRate in the earned and rewardsPerToken functions;\n    //     // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\n    //     uint balance = bdlToken.balanceOf(address(this));\n    //     require(\n    //         rewardRate <= balance / rewardsDuration,\n    //         \"Staking: Provided reward too high\"\n    //     );\n\n    //     lastUpdateTime = block.timestamp;\n    //     periodFinish = block.timestamp + rewardsDuration;\n    //     emit RewardAdded(reward);\n    // }\n\n    // function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\n    //     require(\n    //         block.timestamp > periodFinish,\n    //         \"Staking: Previous rewards period must be complete before changing the duration for the new period\"\n    //     );\n    //     rewardsDuration = _rewardsDuration;\n    //     emit RewardsDurationUpdated(rewardsDuration);\n    // }\n\n    // function pause() external onlyOwner {\n    //     _pause();\n    // }\n\n    // function unpause() external onlyOwner {\n    //     _unpause();\n    // }\n\n    // // modifiers\n    // modifier updateReward(address account) {\n    //     rewardPerTokenStored = rewardPerToken();\n    //     lastUpdateTime = lastTimeRewardApplicable();\n    //     if (account != address(0)) {\n    //         rewards[account] = earned(account);\n    //         userRewardPerTokenPaid[account] = rewardPerTokenStored;\n    //     }\n    //     _;\n    // }\n\n    // // events\n    // event RewardAdded(uint256 reward);\n    // event Staked(address indexed user, uint256 amount, uint256[] tokenIds);\n    // event Withdrawn(address indexed user, uint256 amount, uint256[] tokenIds);\n    // event RewardPaid(address indexed user, uint256 reward);\n    // event RewardsDurationUpdated(uint256 newDuration);\n}\n",
  "sourcePath": "C:\\Users\\Arogundade Ibrahim\\Documents\\web3\\Buidl\\contracts\\BdlNftStaking.sol",
  "ast": {
    "absolutePath": "project:/contracts/BdlNftStaking.sol",
    "exportedSymbols": {
      "Address": [
        2359
      ],
      "BdlNft": [
        12166
      ],
      "BdlNftStaking": [
        12182
      ],
      "Context": [
        2381
      ],
      "ERC165": [
        2631
      ],
      "ERC721": [
        1673
      ],
      "ERC721Holder": [
        1861
      ],
      "IERC165": [
        2643
      ],
      "IERC721": [
        1789
      ],
      "IERC721Metadata": [
        1834
      ],
      "IERC721Receiver": [
        1807
      ],
      "Ownable": [
        112
      ],
      "Pausable": [
        371
      ],
      "ReentrancyGuard": [
        411
      ],
      "Strings": [
        2607
      ]
    },
    "id": 12183,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12168,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:45"
      },
      {
        "absolutePath": "project:/contracts/BdlNft.sol",
        "file": "./BdlNft.sol",
        "id": 12169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12183,
        "sourceUnit": 12167,
        "src": "69:22:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 12170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12183,
        "sourceUnit": 1862,
        "src": "120:69:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 12171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12183,
        "sourceUnit": 412,
        "src": "190:62:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 12172,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12183,
        "sourceUnit": 372,
        "src": "253:55:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 12173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12183,
        "sourceUnit": 113,
        "src": "309:52:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12174,
              "name": "ERC721Holder",
              "nameLocations": [
                "389:12:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1861,
              "src": "389:12:45"
            },
            "id": 12175,
            "nodeType": "InheritanceSpecifier",
            "src": "389:12:45"
          },
          {
            "baseName": {
              "id": 12176,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "403:15:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 411,
              "src": "403:15:45"
            },
            "id": 12177,
            "nodeType": "InheritanceSpecifier",
            "src": "403:15:45"
          },
          {
            "baseName": {
              "id": 12178,
              "name": "Ownable",
              "nameLocations": [
                "420:7:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "420:7:45"
            },
            "id": 12179,
            "nodeType": "InheritanceSpecifier",
            "src": "420:7:45"
          },
          {
            "baseName": {
              "id": 12180,
              "name": "Pausable",
              "nameLocations": [
                "429:8:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 371,
              "src": "429:8:45"
            },
            "id": 12181,
            "nodeType": "InheritanceSpecifier",
            "src": "429:8:45"
          }
        ],
        "canonicalName": "BdlNftStaking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12182,
        "linearizedBaseContracts": [
          12182,
          371,
          112,
          2381,
          411,
          1861,
          1807
        ],
        "name": "BdlNftStaking",
        "nameLocation": "372:13:45",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 12183,
        "src": "363:7199:45",
        "usedErrors": []
      }
    ],
    "src": "36:7527:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-23T20:33:59.963Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}